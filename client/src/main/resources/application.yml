server.port: 8080

spring:
  application:
    name: client

security:
  oauth2:
    sso:
      loginPath: /login
    client:
      accessTokenUri: http://localhost:8765/uaa/oauth/token
      userAuthorizationUri: http://localhost:8765/uaa/oauth/authorize
      clientId: acme
      clientSecret: acmesecret
      grant-type: authorization_code
    resource:
      jwt:
        keyValue: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB
          -----END PUBLIC KEY-----
      id: openid
      serviceId: ${PREFIX:}resource
  basic:
    enabled: false

logging.level.org.springframework.security: DEBUG

eureka:
  instance:
    hostname: localhost
    port: 8761
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/

---

spring:
  profiles: docker

#server:
#  port: ${SERVICE_PORT}

eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: ${REGISTRY_URL}